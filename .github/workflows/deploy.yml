name: 🚀 Launch

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: 🏗️ Build
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          cache: npm
          node-version: 20

      - name: 📥 Install deps
        run: npm ci
        env:
          FONT_AWESOME_TOKEN: ${{ secrets.FONT_AWESOME_TOKEN }}

      - name: 🏗️ Build
        run: npm run build

  docker:
    name: 🐳 Docker
    runs-on: ubuntu-latest
    needs: [ build ]

    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🐳 Login to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com/lodybo-registry
          username: ${{ secrets.DIGITALOCEAN_REGISTRY_USER }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          logout: true

      - name: ⚗️ Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - name: ⚗️ Extract repository from values.yaml
        uses: mikefarah/yq@v4.44.2
        id: repository
        with:
          cmd: "yq .app.image.repository values.yaml"

      - name: 🐳 Build container image
        uses: docker/build-push-action@v6
        with:
          tags: ${{ steps.repository.outputs.result }}:${{ steps.version.outputs.value }}
          push: true
          secrets: |
            FONT_AWESOME_TOKEN=${{ secrets.FONT_AWESOME_TOKEN }}
            SENDGRID_API_KEY=${{ secrets.SENDGRID_API_KEY }}

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [ docker ]

    # only build/deploy main branch on pushes
    if: ${{ (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⚗️ Extract version from package.json
        uses: sergeysova/jq-action@v2
        id: version
        with:
          cmd: 'jq .version package.json -r'

      - name: ⚗️ Extract app name from values.yaml
        uses: mikefarah/yq@v4.44.2
        id: appname
        with:
          cmd: "yq .app.name values.yaml"

      - name: ⚗️ Extract namespace from values.yaml
        uses: mikefarah/yq@v4.44.2
        id: namespace
        with:
          cmd: "yq .app.namespace values.yaml"

      - name: 🌊 Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      # Save the right kubernetes context depending on the branch name
      - name: 💾 Save DigitalOcean kubeconfig for dev environment
        if: github.ref == 'refs/heads/dev'
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 spindraad-dev-cluster

      # Save the right kubernetes context depending on the branch name
      - name: 💾 Save DigitalOcean kubeconfig for production environment
        if: github.ref == 'refs/heads/main'
        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 spindraad-app-cluster

      - name: ✏️ Update Helm Chart's appVersion
        run: sed -i "s/<VERSION>/${{ steps.version.outputs.value }}/g" Chart.yaml

      - name: 🚀 Deploy to cluster
        run:
          helm upgrade --install $(echo ${{ steps.appname.outputs.result }}) . --set app.image.tag=$(echo ${{ steps.version.outputs.value }}) --namespace=$(echo ${{ steps.namespace.outputs.result }}) --create-namespace
